// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  CREATED   // Оформлен
  VIEWED    // Просмотрен
  COMPLETED // Исполнен
  CANCELED  // Отменен
}

model Product {
  id                 Int                   @id @default(autoincrement())
  name               String
  slug               String                @unique
  sku                String                @unique
  description        String
  price              Float
  category_id        Int
  is_hit             Boolean               @default(false)
  in_stock           Boolean               @default(true)
  stock_quantity     Int                   @default(0)
  main_image         String
  created_at         DateTime              @default(now())
  updated_at         DateTime              @updatedAt
  category           Category              @relation(fields: [category_id], references: [id])
  images             ProductImage[]
  specifications     ProductSpecification[]
  orderItems         OrderItem[]
}

model Category {
  id           Int        @id @default(autoincrement())
  name         String
  slug         String     @unique
  description  String?
  image_url    String?
  parent_id    Int?
  created_at   DateTime   @default(now())
  parent       Category?  @relation("CategoryToSubcategory", fields: [parent_id], references: [id])
  children     Category[] @relation("CategoryToSubcategory")
  products     Product[]
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  product_id Int
  image_url  String
  is_main    Boolean  @default(false)
  sort_order Int      @default(0)
  created_at DateTime @default(now())
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model Specification {
  id                  Int                   @id @default(autoincrement())
  name                String
  slug                String                @unique
  created_at          DateTime              @default(now())
  productSpecifications ProductSpecification[]
}

model ProductSpecification {
  id               Int           @id @default(autoincrement())
  product_id       Int
  specification_id Int
  value            String
  created_at       DateTime      @default(now())
  product          Product       @relation(fields: [product_id], references: [id], onDelete: Cascade)
  specification    Specification @relation(fields: [specification_id], references: [id])

  @@unique([product_id, specification_id])
}

model Order {
  id           Int         @id @default(autoincrement())
  status       OrderStatus @default(CREATED)
  customer_name String
  email        String
  phone        String
  address      String?
  comment      String?
  total_amount Float
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  items        OrderItem[]
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  order_id   Int
  product_id Int
  name       String   // Сохраняем название товара на момент заказа
  price      Float    // Сохраняем цену товара на момент заказа
  quantity   Int
  image_url  String?  // Сохраняем URL изображения товара на момент заказа
  created_at DateTime @default(now())
  order      Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product    Product  @relation(fields: [product_id], references: [id])
}
